def mvnHome
def remote = [:]
         remote.name = 'ansible'
         remote.host = '172.31.30.225'
         remote.user = 'centos'
         remote.password = 'Rnstech@123'
         remote.allowAnyHosts = true

pipeline {
   agent none
    
   stages {
      stage('Prepare Workspace') {
         agent {
              label 'BuildServer'
          }
         steps {
            // Get src code from a GitHub repository
            git credentialsId: 'github_un-pwd', url: 'https://github.com/venkat09docs/Maven-Java-Project.git'
            
            script{
                mvnHome = tool name: 'maven3.6', type: 'maven'
            }      
      }   
      }
      
      stage('Setup Tools'){
         agent {
              label 'BuildServer'
          }
          steps{
          
            sshCommand remote: remote, command: 'cd Maven-Java-Project; git pull'
            //sshCommand remote: remote, command: 'cd Maven-Java-Project; ansible-playbook -i hosts tools/sonarqube/sonar-install.yaml'
            //sshCommand remote: remote, command: 'cd Maven-Java-Project; ansible-playbook -i hosts tools/docker/docker-install.yml'
          }
      }      
      stage('SonarQube analysis') {
         agent {
              label 'BuildServer'
          }
          steps{
                  withSonarQubeEnv('sonar-7') { 
                     sh "${mvnHome}/bin/mvn sonar:sonar"
        
                     //sh "${mvnHome}/bin/mvn sonar:sonar -Dsonar.projectKey=maven-java -Dsonar.host.url=http://server_url:9000 -Dsonar.login=token"
                  }
                  //sh "'${mvnHome}/bin/mvn' clean sonar:sonar -Dsonar.projectKey=java -Dsonar.host.url=http://ec2-54-198-222-136.compute-1.amazonaws.com:9000 -Dsonar.login=3671a58bdbe44408418f5cd38ff2210221eb9a26"
                 //sh "'${mvnHome}/bin/mvn' clean sonar:sonar -Dsonar.projectKey=java-maven   -Dsonar.host.url=http://ec2-54-198-222-136.compute-1.amazonaws.com:9000   -Dsonar.login=4daf89724dd48c905eb145b3151ce2dff2d7add3"
          }
      }
   }
}
